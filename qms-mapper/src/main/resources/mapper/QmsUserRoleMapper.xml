<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.evergrande.qms.mapper.QmsUserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.evergrande.qms.model.QmsUserRole" >
    <id column="id" property="id" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, role_id, create_user, create_date, update_user, update_date
  </sql>
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from qms_user_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="findByRoleId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from qms_user_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String" >
    delete from qms_user_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.evergrande.qms.model.QmsUserRole" >
    insert into qms_user_role (id, user_id, role_id, 
      create_user, create_date, update_user, 
      update_date)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="batchAdd" parameterType="java.util.List" >
    insert into qms_user_role (id, user_id, role_id,
    create_user, create_date, update_user,
    update_date)
    values
    <foreach collection="list" item="item" index="index" separator=",">
    (#{item.id,jdbcType=VARCHAR}, #{item.userId,jdbcType=VARCHAR}, #{item.roleId,jdbcType=VARCHAR},
    #{item.createUser,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR},
    #{item.updateDate,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="add" parameterType="com.evergrande.qms.model.QmsUserRole" >
    insert into qms_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.evergrande.qms.model.QmsUserRole" >
    update qms_user_role
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.evergrande.qms.model.QmsUserRole" >
    update qms_user_role
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>