<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.evergrande.qms.mapper.QmsFuncMapper">
  <resultMap id="BaseResultMap" type="com.evergrande.qms.model.QmsFunc">
      <id column="id" property="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="func_name" property="funcName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="func_url" property="funcUrl" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="func_order" property="funcOrder" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="create_user" property="createUser" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="create_date" property="createDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <result column="update_user" property="updateUser" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="update_date" property="updateDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <result column="menu_id" property="menuId" javaType="java.lang.String" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List">
    id, func_name, func_url, func_order, create_user, create_date, update_user, update_date
  </sql>

  <sql id="Func_Column_List">
    t1.id, t1.func_name, t1.func_url, t1.func_order, t1.create_user, t1.create_date, t1.update_user,
    t1.update_date, t2.menu_id
  </sql>

  <select id="findByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Func_Column_List" />
    FROM qms_user_menu_func t LEFT JOIN  qms_func t1 ON t.menu_func_id = t1.id
    LEFT JOIN qms_menu_func t2 ON t2.func_id = t1.id
    where t.user_id = #{userId,jdbcType=VARCHAR}
  </select>

  <select id="findByRoleId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Func_Column_List" />
    FROM qms_role_menu_func t LEFT JOIN  qms_func t1 ON t.menu_func_id = t1.id
    LEFT JOIN qms_menu_func t2 ON t2.func_id = t1.id
    where t.role_id = #{roleId,jdbcType=VARCHAR}
  </select>

  <select id="get" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from qms_func
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String">
    delete from qms_func
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.evergrande.qms.model.QmsFunc">
    insert into qms_func (id, func_name, func_url, func_order,
      create_user, create_date, update_user, 
      update_date)
    values (#{id,jdbcType=VARCHAR}, #{funcName,jdbcType=VARCHAR}, #{funcUrl,jdbcType=VARCHAR}, #{funcOrder,jdbcType=INTEGER},
      #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="add" parameterType="com.evergrande.qms.model.QmsFunc">
    insert into qms_func
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="funcName != null">
        func_name,
      </if>
      <if test="funcUrl != null">
        func_url,
      </if>
      <if test="funcOrder != null">
        func_order,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="funcName != null">
        #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcUrl != null">
        #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcOrder != null">
        #{funcOrder,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.evergrande.qms.model.QmsFunc">
    update qms_func
    <set>
      <if test="funcName != null">
        func_name = #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcUrl != null">
        func_url = #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcOrder != null">
        func_order = #{funcOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.evergrande.qms.model.QmsFunc">
    update qms_func
    set func_name = #{funcName,jdbcType=VARCHAR},
      func_order = #{funcOrder,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>