<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.evergrande.qms.mapper.QmsRoleMapper" >
  <resultMap id="BaseResultMap" type="com.evergrande.qms.model.QmsRole" >
      <id column="id" property="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="code" property="code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="name" property="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="status" property="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result column="description" property="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="create_user" property="createUser" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="create_date" property="createDate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <result column="update_user" property="updateUser" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, status, description, create_user, create_date, update_user, update_date
  </sql>
  <select id="findAllList" resultMap="BaseResultMap" parameterType="com.evergrande.qms.model.QmsRole" >
    select
    <include refid="Base_Column_List" />
    from qms_role
    <where>
      <if test="name != null and name != ''">
        and name like CONCAT('%','${name}','%' )
      </if>
      <if test="code != null and code != ''">
        and code like CONCAT('%','${code}','%' )
      </if>
      <if test="status != null and status != ''">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
    ORDER BY update_date DESC
  </select>
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from qms_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="findByRoleName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from qms_role
    where name = #{roleName,jdbcType=VARCHAR}
  </select>
  <delete id="delete" parameterType="java.lang.String" >
    delete from qms_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.evergrande.qms.model.QmsRole" >
    insert into qms_role (id, code, name, status,
      description, create_user, create_date, 
      update_user, update_date)
    values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{description,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="add" parameterType="com.evergrande.qms.model.QmsRole" >
    insert into qms_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.evergrande.qms.model.QmsRole" >
    update qms_role
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.evergrande.qms.model.QmsRole" >
    update qms_role
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>