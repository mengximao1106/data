<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.evergrande.qms.mapper.MaterialMapper">
    <resultMap id="findMaterialResultMap" type="com.evergrande.qms.vo.QmsMaterialVO" >
        <id column="id" property="id" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_code" property="materialCode" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_name" property="materialName" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_type_code" property="materialTypeCode" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_type_name" property="materialTypeName" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_category" property="materialCategory" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="genre" property="genre" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="original_manufacturer" property="originalManufacturer" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="unit" property="unit" jdbcType="VARCHAR" javaType="java.lang.String" />
    </resultMap>

    <resultMap id="getModel" type="com.evergrande.qms.model.Material" >
        <id column="id" property="id" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_code" property="materialCode" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_name" property="materialName" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_type_code" property="materialTypeCode" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="material_category" property="materialCategory" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="genre" property="genre" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="original_manufacturer" property="originalManufacturer" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="unit" property="unit" jdbcType="VARCHAR" javaType="java.lang.String" />
    </resultMap>

    <sql id="base_column_list">
        id,material_code,material_name,material_type_code,material_category,genre,
        original_manufacturer,unit,crud_type,create_user,create_date,update_user,update_date
    </sql>

    <!-- 获取表记录数量 -->
    <select id="getTableSize" resultType="java.lang.Integer">
        select count(0) from qms_material
    </select>

    <!-- 查询全部原材料记录 -->
    <select id="findAllList" resultMap="findMaterialResultMap" parameterType="com.evergrande.qms.vo.QmsMaterialVO" >
        SELECT
            m.id,m.material_code, t.material_type_name, m.material_name,m.material_type_code,
            m.material_category,m.genre,m.original_manufacturer,m.unit
        FROM qms_material m
        LEFT JOIN qms_material_type t on m.material_type_code = t.material_type_code
        <where>
            <!-- 材料类别编号 -->
            <if test="materialTypeCode != null and materialTypeCode != ''">
                and m.material_type_code like CONCAT('%',#{materialTypeCode,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 材料类别名称 -->
            <if test="materialTypeName != null and materialTypeName != ''">
                and t.material_type_name like CONCAT('%',#{materialTypeName,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 物料种类 -->
            <if test="materialCategory != null and materialCategory != ''">
                and m.material_category = #{materialCategory,jdbcType=VARCHAR}
            </if>
            <!-- 物料编码 -->
            <if test="materialCode != null and materialCode != ''">
                and m.material_code like CONCAT('%',#{materialCode,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 物料名称 -->
            <if test="materialName != null and materialName != ''">
                and m.material_name like CONCAT('%',#{materialName,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 原生产厂商 -->
            <if test="originalManufacturer != null and originalManufacturer != ''">
                and m.original_manufacturer like CONCAT('%',#{originalManufacturer,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 排除物料数据 -->
            and m.genre != #{genre,jdbcType=VARCHAR}
            <!-- CRUD -->
            and (m.crud_type != 'D' or m.crud_type is NULL)
        </where>
        ORDER BY m.create_date DESC
    </select>

    <!-- 获取表记录数量 -->
    <select id="getOriginalTableSize" resultType="java.lang.Integer" parameterType="com.evergrande.qms.vo.QmsMaterialVO">
        select count(0)
        FROM qms_material m
        LEFT JOIN qms_material_type t on m.material_type_code = t.material_type_code
        <where>
            <!-- 材料类别编号 -->
            <if test="materialTypeCode != null and materialTypeCode != ''">
                and m.material_type_code like CONCAT('%',#{materialTypeCode,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 材料类别名称 -->
            <if test="materialTypeName != null and materialTypeName != ''">
                and t.material_type_name like CONCAT('%',#{materialTypeName,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 物料种类 -->
            <if test="materialCategory != null and materialCategory != ''">
                and m.material_category = #{materialCategory,jdbcType=VARCHAR}
            </if>
            <!-- 物料编码 -->
            <if test="materialCode != null and materialCode != ''">
                and m.material_code like CONCAT('%',#{materialCode,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 物料名称 -->
            <if test="materialName != null and materialName != ''">
                and m.material_name like CONCAT('%',#{materialName,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 原生产厂商 -->
            <if test="originalManufacturer != null and originalManufacturer != ''">
                and m.original_manufacturer like CONCAT('%',#{originalManufacturer,jdbcType=VARCHAR},'%' )
            </if>
            <!-- 排除物料数据 -->
            and m.genre != #{genre,jdbcType=VARCHAR}
            <!-- CRUD -->
            and (m.crud_type != 'D' or m.crud_type is NULL)
        </where>
    </select>

    <!-- 根据ID查询 -->
    <select id="get" resultMap="getModel" parameterType="java.lang.String" >
        SELECT
        m.id,m.material_code, m.material_name,m.material_type_code,
        m.material_category,m.genre,m.original_manufacturer,m.unit
        FROM qms_material m
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <!-- 根据物料编码查询记录 -->
    <select id="searchByMaterialCode" parameterType="java.lang.String" resultType="com.evergrande.qms.model.Material">
        select
        <include refid="base_column_list"/>
        from qms_material
        where material_code = #{materialCode,jdbcType=VARCHAR} and (crud_type != 'D' or crud_type is NULL)
    </select>

    <!-- 根据物料名称查询记录 -->
    <select id="searchByMaterialName" parameterType="java.lang.String" resultType="com.evergrande.qms.model.Material">
        select
        <include refid="base_column_list"/>
        from qms_material
        where material_name = #{materialName,jdbcType=VARCHAR} and (crud_type != 'D' or crud_type is NULL)
    </select>

    <select id="getMaterialManageByCode" resultType="com.evergrande.qms.vo.MaterialManageVO">
        select * from qms_material_manage mg where mg.material_code = #{code} and (mg.crud_type != 'D' or mg.crud_type is NULL)
    </select>

    <!-- 新增物料数据 -->
    <insert id="batchAddMaterial" parameterType="java.util.List">
        insert into qms_material(<include refid="base_column_list"/>)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id,jdbcType=VARCHAR},
            #{item.materialCode,jdbcType=VARCHAR},
            #{item.materialName,jdbcType=VARCHAR},
            #{item.materialTypeCode,jdbcType=VARCHAR},
            #{item.materialCategory,jdbcType=VARCHAR},
            #{item.genre,jdbcType=VARCHAR},
            #{item.originalManufacturer,jdbcType=VARCHAR},
            #{item.unit,jdbcType=VARCHAR},
            #{item.crudType,jdbcType=VARCHAR},
            #{item.createUser,jdbcType=VARCHAR},
            #{item.createDate,jdbcType=TIMESTAMP},
            #{item.updateUser,jdbcType=VARCHAR},
            #{item.updateDate,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <!-- 修改物料数据 -->
    <update id="batchUpdateMaterial" parameterType="java.util.List">
        update qms_material
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="material_code=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.materialCode !=null">
                        when id=#{item.id} then #{item.materialCode,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="material_name=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.materialName !=null">
                        when id=#{item.id} then #{item.materialName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="material_type_code=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.materialTypeCode !=null">
                        when id=#{item.id} then #{item.materialTypeCode,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="material_category=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.materialCategory !=null">
                        when id=#{item.id} then #{item.materialCategory,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="genre=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.genre !=null">
                        when id=#{item.id} then #{item.genre,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="original_manufacturer=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.originalManufacturer !=null">
                        when id=#{item.id} then #{item.originalManufacturer,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="unit=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.unit !=null">
                        when id=#{item.id} then #{item.unit,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="crud_type=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.crudType !=null">
                        when id=#{item.id} then #{item.crudType,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_user=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.updateUser !=null">
                        when id=#{item.id} then #{item.updateUser,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.updateDate !=null">
                        when id=#{item.id} then #{item.updateDate,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=VARCHAR}
        </foreach>
    </update>

    <!-- 逻辑删除物料数据 -->
    <update id="batchDeleteMaterial" parameterType="java.util.List">
        update qms_material
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="crud_type=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.crudType !=null">
                        when material_code=#{item.materialCode} then #{item.crudType,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>

            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.updateDate !=null">
                        when material_code=#{item.materialCode} then #{item.updateDate,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where material_code in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.materialCode,jdbcType=VARCHAR}
        </foreach>
    </update>

    <!-- 批量删除记录 -->
    <delete id="batchDelete" parameterType="java.util.List">
        delete from qms_material
        where id in
        <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </delete>

    <!-- 查询导出的数据 -->
    <select id="findExportData" resultMap="findMaterialResultMap" parameterType="java.util.List" >
        SELECT
            m.id,m.material_code, t.material_type_name, m.material_name,m.material_type_code,
            m.material_category,m.genre,m.original_manufacturer,m.unit
        FROM qms_material m
        LEFT JOIN qms_material_type t on m.material_type_code = t.material_type_code
        WHERE m.id in
        <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </select>

    <!-- 获取表记录数量 -->
    <select id="getExportSize" resultType="java.lang.Integer" parameterType="java.util.List">
        select count(0)
        FROM qms_material m
        WHERE m.id in
        <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="findMaterialTypeByMaterialCode"  parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
        count( 1 )
        FROM
        qms_material_type t
        WHERE
        t.material_type_code IN ( SELECT l.material_type_code FROM qms_material l WHERE l.material_code = #{materialCode,jdbcType=VARCHAR} )
    </select>

</mapper>


