<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.evergrande.qms.mapper.QmsRevisionMapper">

    <update id="updateCheckResult" parameterType="com.evergrande.qms.model.QmsInspectionResult">
        update qms_inspection_result set checker = #{checker,jdbcType=VARCHAR},
                                        check_result = #{checkResult,jdbcType=VARCHAR},
                                        check_date = #{checkDate,jdbcType=TIMESTAMP},
                                        update_user = #{updateUser,jdbcType=VARCHAR},
                                        update_date = #{updateDate,jdbcType=TIMESTAMP}
                                            where sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                                                and material_code = #{materialCode,jdbcType=VARCHAR}
    </update>

    <update id="updateSystemCheckResult" parameterType="com.evergrande.qms.model.QmsInspectionResult">
        update qms_inspection_result set system_checker = #{systemChecker,jdbcType=VARCHAR},
                                        system_check_result = #{systemCheckResult,jdbcType=VARCHAR},
                                        system_check_date = #{systemCheckDate,jdbcType=TIMESTAMP},
                                        update_user = #{updateUser,jdbcType=VARCHAR},
                                        update_date = #{updateDate,jdbcType=TIMESTAMP}
                                            where sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                                                and material_code = #{materialCode,jdbcType=VARCHAR}
    </update>

    <resultMap id="MaterialAllItemBaseResultMap" type="com.evergrande.qms.vo.QmsItemResultVO">
        <result column="id" jdbcType="VARCHAR" property="id"  javaType="java.lang.String" />
        <result column="more_than_value" jdbcType="DOUBLE" property="moreThanValue"  javaType="java.lang.Double" />
        <result column="less_than_value" jdbcType="DOUBLE" property="lessThanValue"  javaType="java.lang.Double" />
        <result column="inspection_value" jdbcType="VARCHAR" property="inspectionValue"  javaType="java.lang.String" />
        <result column="inspection_result" jdbcType="VARCHAR" property="inspectionResult"  javaType="java.lang.String" />
        <result column="value_type" jdbcType="VARCHAR" property="valueType"  javaType="java.lang.String" />
    </resultMap>

    <sql id="Material_Item_Base_Column_List">
        d.id,
        (select c.more_than_value
            from qms_inspection_item c
                where  b.material_code = c.material_code
                    and c.inspection_code = d.inspection_code
                    and c.standard_num = d.standard_num) more_than_value,
        (select c.less_than_value
            from qms_inspection_item c
                where  b.material_code = c.material_code
                    and c.inspection_code = d.inspection_code
                    and c.standard_num = d.standard_num) less_than_value,
        d.inspection_value,
        d.inspection_result,
        d.value_type
    </sql>

    <select id="findMaterialAllItem" resultMap="MaterialAllItemBaseResultMap">
        select
                <include refid="Material_Item_Base_Column_List"/>
                from qms_sample_plan a,
                    qms_sample_plan_detail b,
                    qms_inspection_order_item d,
                    qms_inspection_order e,
                    qms_order_material_detail_bind f
                        where a.sample_plan_code = b.sample_plan_code
                            and a.data_status = '1'
                            and b.data_status = '1'
                            and a.is_delete = '0'
                            and a.sample_plan_code = d.sample_plan_code
                            and b.id = d.sample_plan_detail_id
                            and d.confirm_flag = '1'
                            and b.id = f.sample_plan_detail_id
                            and e.id = f.inspection_order_id
                            and e.id = d.inspection_order_id
                            and e.inspection_order_num = #{inspectionOrderNum,jdbcType=VARCHAR}
                            and a.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                            and b.material_code = #{materialCode,jdbcType=VARCHAR}
    </select>


    <update id="batchUpdateItemEvaluate"  parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update qms_inspection_order_item set
                                            inspection_evaluate = #{item.inspectionEvaluate,jdbcType=VARCHAR},
                                            update_user = #{item.updateUser,jdbcType=VARCHAR},
                                            update_date = #{item.updateDate,jdbcType=TIMESTAMP}
                                                where id = #{item.id,jdbcType=VARCHAR}
        </foreach>
    </update>

    <update id="updateReviewResult" parameterType="com.evergrande.qms.model.QmsInspectionResult">
        update qms_inspection_result set reviewer = #{reviewer,jdbcType=VARCHAR},
                                    review_result = #{reviewResult,jdbcType=VARCHAR},
                                    review_date = #{reviewDate,jdbcType=TIMESTAMP},
                                    update_user = #{updateUser,jdbcType=VARCHAR},
                                    update_date = #{updateDate,jdbcType=TIMESTAMP}
                                        where sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                                            and material_code = #{materialCode,jdbcType=VARCHAR}
    </update>

    <resultMap id="PlanBaseResultMap" type="com.evergrande.qms.model.QmsSamplePlan">
        <id column="id" property="id" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="plan_type" property="planType" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_type" property="sampleType" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_address_id" property="sampleAddressId" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_address" property="sampleAddress" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_user_id" property="sampleUserId" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_user_name" property="sampleUserName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_date" property="sampleDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="inspect_department" property="inspectDepartment" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="receive_sample_user_id" property="receiveSampleUserId" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="receive_sample_user_name" property="receiveSampleUserName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="supplier_code" property="supplierCode" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_factory" property="sampleFactory" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_department_id" property="sampleDepartmentId" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sample_department" property="sampleDepartment" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="receive_sample_user_phone" property="receiveSampleUserPhone" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="actual_sample_date" property="actualSampleDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="actual_sample_user_name" property="actualSampleUserName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="actual_sample_user_id" property="actualSampleUserId" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>

    <sql id="Plan_Base_Column_List">
        id,
        plan_type,
        sample_type,
        sample_address_id,
        sample_address,
        sample_user_id,
        sample_user_name,
        sample_date,
        inspect_department,
        receive_sample_user_id,
        receive_sample_user_name,
        supplier_name,
        supplier_code,
        sample_factory,
        sample_department_id,
        sample_department,
        receive_sample_user_phone,
        actual_sample_date,
        actual_sample_user_name,
        actual_sample_user_id
    </sql>

    <select id="findSamplePlanInfo" parameterType="java.lang.String" resultMap="PlanBaseResultMap">
        select <include refid="Plan_Base_Column_List"/>
            from qms_sample_plan
                where sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                    and data_status = '1'
                    and is_delete = '0'
    </select>

    <resultMap id="PlanDetailBaseResultMap" type="com.evergrande.qms.model.QmsSamplePlanDetail">
        <result column="row_num" jdbcType="INTEGER" property="rowNum" javaType="java.lang.Integer"/>
        <result column="material_type" jdbcType="VARCHAR" property="materialType" javaType="java.lang.String"/>
        <result column="material_code" jdbcType="VARCHAR" property="materialCode" javaType="java.lang.String"/>
        <result column="material_desc" jdbcType="VARCHAR" property="materialDesc" javaType="java.lang.String"/>
        <result column="brand" jdbcType="VARCHAR" property="brand" javaType="java.lang.String"/>
        <result column="duty_user_id" jdbcType="VARCHAR" property="dutyUserId" javaType="java.lang.String"/>
        <result column="material_standard" jdbcType="VARCHAR" property="materialStandard" javaType="java.lang.String"/>
        <result column="type" jdbcType="VARCHAR" property="type" javaType="java.lang.String"/>
        <result column="sample_order_number" jdbcType="VARCHAR" property="sampleOrderNumber" javaType="java.lang.String"/>
        <result column="plan_sample_amount" jdbcType="DOUBLE" property="planSampleAmount" javaType="java.lang.Double"/>
        <result column="plan_sample_amount_reserve" jdbcType="DOUBLE" property="planSampleAmountReserve" javaType="java.lang.Double"/>
        <result column="actual_sample_amount" jdbcType="DOUBLE" property="actualSampleAmount" javaType="java.lang.Double"/>
        <result column="actual_sample_amount_reserve" jdbcType="DOUBLE" property="actualSampleAmountReserve" javaType="java.lang.Double"/>
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" javaType="java.lang.String"/>
        <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason" javaType="java.lang.String"/>
        <result column="material_type_code" jdbcType="VARCHAR" property="materialTypeCode" javaType="java.lang.String"/>
        <result column="monitor_indicator_type" jdbcType="VARCHAR" property="monitorIndicatorType" javaType="java.lang.String"/>
        <result column="batch_number" jdbcType="VARCHAR" property="batchNumber" javaType="java.lang.String"/>
        <result column="arrival_time" jdbcType="TIMESTAMP" property="arrivalTime" javaType="java.util.Date"/>
    </resultMap>

    <sql id="Plan_Detail_Base_Column_List">
        d.row_num,
        d.material_type,
        d.material_code,
        d.material_desc,
        d.brand,
        d.duty_user_id,
        d.material_standard,
        d.type,
        d.sample_order_number,
        d.plan_sample_amount,
        d.plan_sample_amount_reserve,
        d.actual_sample_amount,
        d.actual_sample_amount_reserve,
        d.sample_code,
        d.cancel_reason,
        d.material_type_code,
        d.monitor_indicator_type,
        d.batch_number,
        d.arrival_time
    </sql>

    <select id="findSamplePlanDetailInfo" parameterType="java.util.Map" resultMap="PlanDetailBaseResultMap">
        select <include refid="Plan_Detail_Base_Column_List"/>
                from qms_sample_plan p,
                    qms_sample_plan_detail d
                        where p.sample_plan_code = d.sample_plan_code
                            and p.data_status = '1'
                            and d.data_status = '1'
                            and p.is_delete = '0'
                            and p.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                            and d.material_code = #{materialCode,jdbcType=VARCHAR}
    </select>

    <resultMap id="PlanItemBaseResultMap" type="com.evergrande.qms.model.QmsSamplePlanItem">
        <result column="inspection_code" jdbcType="VARCHAR" property="inspectionCode" javaType="java.lang.String"/>
        <result column="inspection_item" jdbcType="VARCHAR" property="inspectionItem" javaType="java.lang.String"/>
        <result column="standard_name" jdbcType="VARCHAR" property="standardName" javaType="java.lang.String"/>
        <result column="standard_num" jdbcType="VARCHAR" property="standardNum" javaType="java.lang.String"/>
        <result column="monitor_indicator_type" jdbcType="VARCHAR" property="monitorIndicatorType" javaType="java.lang.String"/>
        <result column="value_type" jdbcType="VARCHAR" property="valueType" javaType="java.lang.String"/>
    </resultMap>

    <sql id="Plan_Item_Base_Column_List">
        o.inspection_code,
        o.inspection_item,
        o.inspection_standard standard_name,
        o.standard_num,
        o.monitor_indicator_type,
        o.value_type
    </sql>

    <select id="findSamplePlanItemInfo" resultMap="PlanItemBaseResultMap">
        select <include refid="Plan_Item_Base_Column_List"/>
                from qms_sample_plan p,
                    qms_sample_plan_detail d,
                    qms_inspection_order_item o,
                    qms_inspection_order i,
                    qms_order_material_detail_bind b
                        where p.sample_plan_code = o.sample_plan_code
                            and p.data_status = '1'
                            and d.data_status = '1'
                            and p.is_delete = '0'
                            and p.sample_plan_code = d.sample_plan_code
                            and i.id = o.inspection_order_id
                            and i.id = b.inspection_order_id
                            and d.id = b.sample_plan_detail_id
                            and d.id = o.sample_plan_detail_id
                            and o.confirm_flag = '1'
                            and o.inspection_evaluate = '2'
                            and i.inspection_order_num = #{inspectionOrderNum,jdbcType=VARCHAR}
                            and p.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                            and d.material_code = #{materialCode,jdbcType=VARCHAR}
    </select>

    <update id="updateOriginalPlan">
        update qms_sample_plan set before_plan_id = #{sampleplanId,jdbcType=VARCHAR} where sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
    </update>

</mapper>