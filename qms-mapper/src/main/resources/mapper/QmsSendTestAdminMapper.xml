<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.evergrande.qms.mapper.QmsSendTestAdminMapper">
    <resultMap id="BaseResultMap" type="com.evergrande.qms.vo.QmsSendTestAdminVO">
        <result column="sample_plan_code" jdbcType="VARCHAR" property="samplePlanCode"  javaType="java.lang.String" />
        <result column="row_num" jdbcType="INTEGER" property="rowNum"  javaType="java.lang.Integer" />
        <result column="material_code" jdbcType="VARCHAR" property="materialCode"  javaType="java.lang.String" />
        <result column="material_desc" jdbcType="VARCHAR" property="materialDesc"  javaType="java.lang.String" />
        <result column="recheck_flag" jdbcType="VARCHAR" property="recheckFlag"  javaType="java.lang.String" />
        <result column="inspect_department" jdbcType="VARCHAR" property="inspectDepartment"  javaType="java.lang.String" />
        <result column="receive_sample_user_name" jdbcType="VARCHAR" property="receiveSampleUserName"  javaType="java.lang.String" />
        <result column="institute_name" jdbcType="VARCHAR" property="instituteName"  javaType="java.lang.String" />
        <result column="status" jdbcType="VARCHAR" property="status"  javaType="java.lang.String" />
        <result column="inspection_order_num" jdbcType="VARCHAR" property="inspectionOrderNum"  javaType="java.lang.String" />
        <result column="order_status" jdbcType="VARCHAR" property="orderStatus"  javaType="java.lang.String" />
    </resultMap>
    
    <sql id="Not_Institute_Base_Column_List">
        sp.sample_plan_code,
        sd.row_num,
        sd.material_code,
        sd.material_desc,
        sd.recheck_flag,
        sp.inspect_department,
        sp.receive_sample_user_name,
        (select ii.institute_name
            from qms_inspection_order od,
                qms_order_material_detail_bind om,
                qms_inspection_institute ii
                    where od.id = om.inspection_order_id
                        and sd.id = om.sample_plan_detail_id
                        and ii.institute_code = od.inspection_organization
                        and ii.status = '0'
                        order by od.status asc, od.update_date desc limit 1) institute_name,
        sd.status,
        (select  od.inspection_order_num
            from qms_inspection_order od,
                qms_order_material_detail_bind om
                    where od.id = om.inspection_order_id
                        and sd.id = om.sample_plan_detail_id
                        order by od.status asc, od.update_date desc limit 1) inspection_order_num,
        (select od.status
            from qms_inspection_order od,
                qms_order_material_detail_bind om
                    where od.id = om.inspection_order_id
                        and sd.id = om.sample_plan_detail_id
                        order by od.status asc, od.update_date desc limit 1) order_status
    </sql>

    <sql id="Have_Institute_Base_Column_List">
        sp.sample_plan_code,
        sd.row_num,
        sd.material_code,
        sd.material_desc,
        sd.recheck_flag,
        sp.inspect_department,
        sp.receive_sample_user_name,
        (select ii.institute_name from qms_inspection_institute ii where ii.institute_code = od.inspection_organization and ii.status = '0') institute_name,
        sd.status,
        od.inspection_order_num,
        od.status order_status
    </sql>

    <select id="findInstituteIsNullList" parameterType="com.evergrande.qms.vo.QmsSendTestAdminVO" resultMap="BaseResultMap">
        select
            <include refid="Not_Institute_Base_Column_List"/>
                from qms_sample_plan sp,
                    qms_sample_plan_detail sd
                        where <choose>
                                <when test="status == null or status == ''">
                                    sd.status in ('6','7','8','9','10')
                                </when>
                                <otherwise>
                                    sd.status = #{status,jdbcType=VARCHAR}
                                </otherwise>
                            </choose>
                            and sp.sample_plan_code = sd.sample_plan_code
                            <if test="recheckFlag != null and recheckFlag != ''">
                                and sd.recheck_flag = #{recheckFlag,jdbcType=VARCHAR}
                            </if>
                            <if test="inspectDepartment != null and inspectDepartment != ''">
                                and sp.inspect_department = #{inspectDepartment,jdbcType=VARCHAR}
                            </if>
                            <if test="samplePlanCode != null and samplePlanCode != ''">
                                and sp.sample_plan_code like concat('%',#{samplePlanCode,jdbcType=VARCHAR},'%')
                            </if >
                            <if test="materialCode != null and materialCode != ''">
                                and sd.material_code like concat('%',#{materialCode,jdbcType=VARCHAR},'%')
                            </if>
                            <if test="materialDesc != null and materialDesc != ''">
                                and sd.material_desc like concat('%',#{materialDesc,jdbcType=VARCHAR},'%')
                            </if>
                            <if test="receiveSampleUserName != null and receiveSampleUserName != ''">
                                and sp.receive_sample_user_name like concat('%',#{receiveSampleUserName,jdbcType=VARCHAR},'%')
                            </if>
                            <if test="receiveSampleUserId != null and receiveSampleUserId != ''">
                                and (sp.receive_sample_user_id = #{receiveSampleUserId,jdbcType=VARCHAR} or sp.create_user = #{receiveSampleUserId,jdbcType=VARCHAR})
                            </if>
                            and sp.data_status = '1'
                            and sd.data_status = '1'
                            and sp.is_delete = '0'
                            order by sp.sample_plan_code desc
    </select>

    <select id="findInstituteIsNotNullList" parameterType="com.evergrande.qms.vo.QmsSendTestAdminVO" resultMap="BaseResultMap">
        select
            <include refid="Have_Institute_Base_Column_List"/>
                from qms_sample_plan sp,
                    qms_sample_plan_detail sd,
                    qms_inspection_order od
                        where <choose>
                                <when test="status == null or status == ''">
                                    sd.status in ('6','7','8','9','10')
                                </when>
                                <otherwise>
                                    sd.status = #{status,jdbcType=VARCHAR}
                                </otherwise>
                            </choose>
                            and sp.sample_plan_code = sd.sample_plan_code
                            and od.inspection_order_num = (select  od.inspection_order_num
                                                            from qms_inspection_order od,
                                                            qms_order_material_detail_bind om
                                                            where od.id = om.inspection_order_id
                                                            and sd.id = om.sample_plan_detail_id
                                                            order by od.status asc, od.update_date desc limit 1)
                            <if test="recheckFlag != null and recheckFlag != ''">
                                and sd.recheck_flag = #{recheckFlag,jdbcType=VARCHAR}
                            </if>
                            <if test="inspectDepartment != null and inspectDepartment != ''">
                                and sp.inspect_department = #{inspectDepartment,jdbcType=VARCHAR}
                            </if>
                            <if test="instituteCode != null and instituteCode != ''">
                                and od.inspection_organization = #{instituteCode,jdbcType=VARCHAR}
                            </if>
                            <if test="samplePlanCode != null and samplePlanCode != ''">
                                and sp.sample_plan_code like concat('%',#{samplePlanCode,jdbcType=VARCHAR},'%')
                            </if >
                            <if test="materialCode != null and materialCode != ''">
                                and sd.material_code like concat('%',#{materialCode,jdbcType=VARCHAR},'%')
                            </if>
                            <if test="materialDesc != null and materialDesc != ''">
                                and sd.material_desc like concat('%',#{materialDesc,jdbcType=VARCHAR},'%')
                            </if>
                            <if test="receiveSampleUserName != null and receiveSampleUserName != ''">
                                and sp.receive_sample_user_name like concat('%',#{receiveSampleUserName,jdbcType=VARCHAR},'%')
                            </if>
                            <if test="receiveSampleUserId != null and receiveSampleUserId != ''">
                                and (sp.receive_sample_user_id = #{receiveSampleUserId,jdbcType=VARCHAR} or sp.create_user = #{receiveSampleUserId,jdbcType=VARCHAR})
                            </if>
                            and sp.data_status = '1'
                            and sd.data_status = '1'
                            and sp.is_delete = '0'
                            order by sp.sample_plan_code desc
    </select>

    <select id="findDeptNameByLoginName" parameterType="java.lang.String" resultType="java.lang.String" >
        select d.short_name
            from idm_sync_user u, idm_sync_dept d
                where u.dept_id = d.id
                    and u.login_name = #{loginName,jdbcType=VARCHAR}
    </select>

    <select id="findDeptByVague" resultType="java.lang.String">
        select short_name
            from idm_sync_dept
                <if test="deptName != null and deptName != ''">
                    where short_name like concat('%',#{deptName,jdbcType=VARCHAR},'%')
                </if>
                limit 200
    </select>

    <resultMap id="InstituteInfoBaseResultMap" type="com.evergrande.qms.vo.QmsInstituteInfoVO">
        <result column="institute_code" jdbcType="VARCHAR" property="instituteCode"  javaType="java.lang.String" />
        <result column="institute_name" jdbcType="VARCHAR" property="instituteName"  javaType="java.lang.String" />
    </resultMap>

    <sql id="Institute_Info_Base_Column_List_Submit">
        institute_code, institute_name
    </sql>

    <select id="findInstituteByVague" resultMap="InstituteInfoBaseResultMap">
        select
            <include refid="Institute_Info_Base_Column_List_Submit"/>
            from qms_inspection_institute
                where status = '0'
                <if test="instituteName != null and instituteName != ''">
                    and institute_name like concat('%',<![CDATA[#{instituteName,jdbcType=VARCHAR}]]>,'%')
                </if>
                limit 200
    </select>

    <resultMap id="PlanInfoResultMap" type="com.evergrande.qms.vo.QmsSamplePlanInfoVO">
        <result column="sample_plan_code" jdbcType="VARCHAR" property="samplePlanCode"  javaType="java.lang.String" />
        <result column="material_desc" jdbcType="VARCHAR" property="materialDesc"  javaType="java.lang.String" />
        <result column="inspect_department" jdbcType="VARCHAR" property="inspectDepartment"  javaType="java.lang.String" />
        <result column="receive_sample_user_name" jdbcType="VARCHAR" property="inspectionSendUserName"  javaType="java.lang.String" />
        <result column="material_code" jdbcType="VARCHAR" property="materialCode"  javaType="java.lang.String" />
        <result column="row_num" jdbcType="INTEGER" property="rowNum"  javaType="java.lang.Integer" />
        <result column="recheck_flag" jdbcType="VARCHAR" property="recheckFlag"  javaType="java.lang.String" />
        <result column="institute_name" jdbcType="VARCHAR" property="instituteName"  javaType="java.lang.String" />
        <result column="inspection_send_time" jdbcType="TIMESTAMP" property="inspectionSendTime"  javaType="java.lang.String" />
        <result column="inspection_order_num" jdbcType="VARCHAR" property="inspectionOrderNum"  javaType="java.lang.String" />
        <result column="order_status" jdbcType="VARCHAR" property="orderStatus"  javaType="java.lang.String" />
        <result column="before_review_result" jdbcType="VARCHAR" property="beforeReviewResult"  javaType="java.lang.String" />
        <result column="determine_reason" jdbcType="VARCHAR" property="determineReason"  javaType="java.lang.String" />
        <result column="revision_remarks" jdbcType="VARCHAR" property="revisionRemarks"  javaType="java.lang.String" />
    </resultMap>

    <sql id="Is_Send_Plan_Info_Base_Column_List">
        sd.material_code,
        sd.material_desc,
        sd.row_num,
        sp.sample_plan_code,
        sp.inspect_department,
        sp.receive_sample_user_name,
        DATE_FORMAT(io.inspection_send_time,'%Y-%m-%d') inspection_send_time,
        sd.recheck_flag,
        (select ii.institute_name from qms_inspection_institute ii where ii.institute_code = io.inspection_organization and ii.status = '0') institute_name,
        io.inspection_order_num,
        io.status order_status,
        sd.before_review_result,
        sd.determine_reason,
        sd.revision_remarks
    </sql>

    <select id="findIsSendPlanInfo" resultMap="PlanInfoResultMap">
        select
            <include refid="Is_Send_Plan_Info_Base_Column_List"/>
            from qms_sample_plan sp,
                qms_sample_plan_detail sd,
                qms_inspection_order io,
                qms_order_material_detail_bind om
                    where sp.sample_plan_code = sd.sample_plan_code
                        and sp.data_status = '1'
                        and sd.data_status = '1'
                        and sp.is_delete = '0'
                        and sd.id = om.sample_plan_detail_id
                        and io.id = om.inspection_order_id
                        and io.inspection_order_num = #{inspectionOrderNum,jdbcType=VARCHAR}
                        and sp.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                        and sd.material_code = #{materialCode,jdbcType=VARCHAR}
    </select>

    <sql id="Not_Send_Plan_Info_Base_Column_List">
        sd.material_code,
        sd.material_desc,
        sd.row_num,
        sp.sample_plan_code,
        sp.inspect_department,
        sp.receive_sample_user_name,
        null inspection_send_time,
        sd.recheck_flag,
        '' institute_name,
        '' inspection_order_num,
        '' order_status
    </sql>

    <select id="findNotSendPlanInfo" resultMap="PlanInfoResultMap">
        select
        <include refid="Not_Send_Plan_Info_Base_Column_List"/>
            from qms_sample_plan sp, qms_sample_plan_detail sd
                where sp.sample_plan_code = sd.sample_plan_code
                    and sp.data_status = '1'
                    and sd.data_status = '1'
                    and sp.is_delete = '0'
                    and sp.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                    and sd.material_code = #{materialCode,jdbcType=VARCHAR}
    </select>

    <resultMap id="BaseResultMapForepartTestItem" type="com.evergrande.qms.vo.QmsForepartTestItemVO">
        <result column="inspection_standard" jdbcType="VARCHAR" property="inspectionStandard"  javaType="java.lang.String" />
        <result column="inspection_item" jdbcType="VARCHAR" property="inspectionItem"  javaType="java.lang.String" />
        <result column="inspection_limit" jdbcType="VARCHAR" property="inspectionLimit"  javaType="java.lang.String" />
        <result column="inspection_value" jdbcType="VARCHAR" property="inspectionValue"  javaType="java.lang.String" />
        <result column="inspection_result" jdbcType="VARCHAR" property="inspectionResult"  javaType="java.lang.String" />
        <result column="inspection_evaluate" jdbcType="VARCHAR" property="inspectionEvaluate"  javaType="java.lang.String" />
        <result column="standard_num" jdbcType="VARCHAR" property="standardNum"  javaType="java.lang.String" />
        <result column="result_desc" jdbcType="VARCHAR" property="resultDesc"  javaType="java.lang.String" />
        <result column="unit" jdbcType="VARCHAR" property="unit"  javaType="java.lang.String" />
    </resultMap>

    <sql id="Forepart_Wait_Base_Column_List">
        si.standard_name inspection_standard,
        si.standard_num,
        si.inspection_item,
        (select (case  when (ii.more_than_value is null and ii.less_than_value is null) then ''
                        when (ii.more_than_value is not null and ii.less_than_value is not null and ii.less_than_value != ii.more_than_value) then concat(ii.more_than_value,' ~ ',ii.less_than_value)
                        when (ii.more_than_value is not null and ii.less_than_value is null) then concat('>=',ii.more_than_value)
                        when (ii.less_than_value is not null and ii.more_than_value is null) then <![CDATA[concat('=<',ii.less_than_value)]]>
                        when (ii.less_than_value = ii.more_than_value) then ii.more_than_value
                        else '' end)
                            from qms_inspection_item ii
                                where  sd.material_code = ii.material_code
                                    and si.inspection_code = ii.inspection_code
                                    and si.standard_num = ii.standard_num) inspection_limit,
        '' inspection_value,
        '' inspection_result,
        '' inspection_evaluate,
        (select unit
            from qms_inspection_item ii
                where sd.material_code = ii.material_code
                    and ii.inspection_code = si.inspection_code
                    and ii.standard_num = si.standard_num) unit
    </sql>

    <!-- 查询: 待委托 的初样检测信息-->
    <select id="findItemUnconfirmedInfo" resultMap="BaseResultMapForepartTestItem">
        select
            <include refid="Forepart_Wait_Base_Column_List"/>
                from qms_sample_plan sp,
                    qms_sample_plan_detail sd,
                    qms_sample_plan_item si
                    where sp.sample_plan_code = si.sample_plan_code
                        and sp.data_status = '1'
                        and sd.data_status = '1'
                        and sp.is_delete = '0'
                        and sp.sample_plan_code = sd.sample_plan_code
                        and sd.id = si.sample_plan_detail_id
                        and sd.material_code = #{materialCode,jdbcType=VARCHAR}
                        and sp.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
    </select>

    <sql id="Forepart_Already_Base_Column_List">
        io.inspection_standard,
        io.standard_num,
        io.inspection_item,
        (select (case  when (ii.more_than_value is null and ii.less_than_value is null) then ''
                        when (ii.more_than_value is not null and ii.less_than_value is not null and ii.less_than_value != ii.more_than_value) then concat(ii.more_than_value,' ~ ',ii.less_than_value)
                        when (ii.more_than_value is not null and ii.less_than_value is null) then concat('>=',ii.more_than_value)
                        when (ii.less_than_value is not null and ii.more_than_value is null) then <![CDATA[concat('=<',ii.less_than_value)]]>
                        when (ii.less_than_value = ii.more_than_value) then ii.more_than_value
                        else '' end )
                            from qms_inspection_item ii
                                where sd.material_code = ii.material_code
                                    and ii.inspection_code = io.inspection_code
                                    and ii.standard_num = io.standard_num)  inspection_limit,
        (case when io.confirm_flag = '1' then io.inspection_value
             else '' end)  inspection_value,
        (case when io.confirm_flag = '1' then (case when io.inspection_result = '1' then '合格'
                                                        when io.inspection_result = '2' then '不合格'
                                                        else '' end)
            else '' end)  inspection_result,
        (case when io.inspection_evaluate = '1' then '合格' when io.inspection_evaluate = '2' then '不合格' else '' end) inspection_evaluate,
        io.result_desc,
        (select unit
            from qms_inspection_item ii
                where sd.material_code = ii.material_code
                    and ii.inspection_code = io.inspection_code
                    and ii.standard_num = io.standard_num) unit
    </sql>

    <!-- 查询: 待寄出、待检测、待校对、已完成(待复核、审核中、已复核)的初样检测信息-->
    <select id="findItemConfirmedInfo" resultMap="BaseResultMapForepartTestItem">
        select
            <include refid="Forepart_Already_Base_Column_List"/>
            from qms_sample_plan sp,
                qms_sample_plan_detail sd,
                qms_inspection_order_item io,
                qms_inspection_order so
                    where sp.sample_plan_code = sd.sample_plan_code
                        and sp.data_status = '1'
                        and sd.data_status = '1'
                        and sp.is_delete = '0'
                        and sp.sample_plan_code = io.sample_plan_code
                        and sd.id = io.sample_plan_detail_id
                        and so.id = io.inspection_order_id
                        and so.inspection_order_num = #{inspectionOrderNum,jdbcType=VARCHAR}
                        and sd.material_code = #{materialCode,jdbcType=VARCHAR}
                        and sp.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
    </select>

    <!--查询委托书编号-->
    <select id="findDelegationCode" resultType="java.lang.String">
        select delegation_code
            from qms_inspection_order
                where inspection_order_num = #{inspectionOrderNum,jdbcType=VARCHAR}
    </select>

    <resultMap id="BaseResultMapReview" type="com.evergrande.qms.vo.QmsInspectionResultInfoVO">
        <result column="inspection_report_code" jdbcType="VARCHAR" property="inspectionReportCode"  javaType="java.lang.String" />
        <result column="checker" jdbcType="VARCHAR" property="checker"  javaType="java.lang.String" />
        <result column="check_result" jdbcType="VARCHAR" property="checkResult"  javaType="java.lang.String" />
        <result column="check_date" jdbcType="TIMESTAMP" property="checkDate"  javaType="java.util.Date" />
        <result column="system_checker" jdbcType="VARCHAR" property="systemChecker"  javaType="java.lang.String" />
        <result column="system_check_result" jdbcType="VARCHAR" property="systemCheckResult"  javaType="java.lang.String" />
        <result column="system_check_date" jdbcType="TIMESTAMP" property="systemCheckDate"  javaType="java.util.Date" />
        <result column="reviewer" jdbcType="VARCHAR" property="reviewer"  javaType="java.lang.String" />
        <result column="review_result" jdbcType="VARCHAR" property="reviewResult"  javaType="java.lang.String" />
        <result column="review_date" jdbcType="TIMESTAMP" property="reviewDate"  javaType="java.util.Date" />
    </resultMap>

    <sql id="Review_Info_Base_Column_List">
        d.inspection_report_code,
        (select u.real_name from qms_user u where u.login_name = r.checker) checker,
        r.check_result,
        r.check_date,
        r.system_checker,
        r.system_check_result,
        r.system_check_date,
        (select u.real_name from qms_user u where u.login_name = r.reviewer) reviewer,
        r.review_result,
        r.review_date
    </sql>

    <select id="findReviewInfo" resultMap="BaseResultMapReview">
        select
            <include refid="Review_Info_Base_Column_List"/>
            from qms_sample_plan p,
                qms_sample_plan_detail d,
                qms_inspection_result r
                    where p.sample_plan_code = d.sample_plan_code
                        and p.data_status = '1'
                        and d.data_status = '1'
                        and p.is_delete = '0'
                        and p.sample_plan_code = r.sample_plan_code
                        and d.material_code = r.material_code
                        and p.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                        and d.material_code = #{materialCode,jdbcType=VARCHAR}
    </select>

    <select id="findOriginalSamplePlanCode" parameterType="java.lang.String" resultType="java.lang.String">
        select a.sample_plan_code
                from qms_sample_plan a, qms_sample_plan b
                    where a.id = b.before_plan_id
                        and a.data_status = '1'
                        and b.data_status = '1'
                        and a.is_delete = '0'
                        and b.is_delete = '0'
                        and b.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
    </select>

    <resultMap id="SampleRecordBaseResult" type="com.evergrande.qms.vo.QmsSampleRecordInfoVO">
        <result column="sample_plan_code" jdbcType="VARCHAR" property="samplePlanCode"  javaType="java.lang.String" />
        <result column="row_num" jdbcType="INTEGER" property="rowNum"  javaType="java.lang.Integer" />
        <result column="material_code" jdbcType="VARCHAR" property="materialCode"  javaType="java.lang.String" />
        <result column="material_desc" jdbcType="VARCHAR" property="materialDesc"  javaType="java.lang.String" />
        <result column="plan_sample_amount" jdbcType="VARCHAR" property="planSampleAmount"  javaType="java.lang.String" />
        <result column="actual_sample_amount" jdbcType="VARCHAR" property="actualSampleAmount"  javaType="java.lang.String" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode"  javaType="java.lang.String" />
        <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason"  javaType="java.lang.String" />
        <result column="sample_notes" jdbcType="VARCHAR" property="sampleNotes"  javaType="java.lang.String" />
    </resultMap>

    <sql id="Sample_Record_Base_Column_List">
        sp.sample_plan_code,
        sd.row_num,
        sd.material_code,
        sd.material_desc,
        sd.plan_sample_amount,
        sd.actual_sample_amount,
        sd.sample_code,
        (case when sd.cancel_reason = '其他' then CONCAT( sd.cancel_reason , '(', sd.other_reasons , ')' )
                else sd.cancel_reason end) cancel_reason,
        (select sr.sample_notes from qms_sample_require sr where sr.material_code = sd.material_code) sample_notes
    </sql>

    <select id="findSampleRecordInfo" parameterType="java.util.Map" resultMap="SampleRecordBaseResult">
        select
            <include refid="Sample_Record_Base_Column_List"/>
                from qms_sample_plan sp,
                    qms_sample_plan_detail sd
                        where sp.sample_plan_code = sd.sample_plan_code
                            and sp.data_status = '1'
                            and sd.data_status = '1'
                            and sp.is_delete = '0'
                            and sp.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                            and sd.material_code = #{materialCode,jdbcType=VARCHAR}
    </select>


    <resultMap id="ReviewTaskBaseResult" type="com.evergrande.qms.vo.QmsReviewTaskVO">
        <result column="sample_plan_code" jdbcType="VARCHAR" property="samplePlanCode"  javaType="java.lang.String" />
        <result column="row_num" jdbcType="INTEGER" property="rowNum"  javaType="java.lang.Integer" />
        <result column="material_code" jdbcType="VARCHAR" property="materialCode"  javaType="java.lang.String" />
        <result column="material_desc" jdbcType="VARCHAR" property="materialDesc"  javaType="java.lang.String" />
        <result column="inspect_department" jdbcType="VARCHAR" property="inspectDepartment"  javaType="java.lang.String" />
        <result column="institute_name" jdbcType="VARCHAR" property="instituteName"  javaType="java.lang.String" />
        <result column="review_status" jdbcType="VARCHAR" property="reviewStatus"  javaType="java.lang.String" />
        <result column="reviewer" jdbcType="VARCHAR" property="reviewer"  javaType="java.lang.String" />
        <result column="review_result" jdbcType="VARCHAR" property="reviewResult"  javaType="java.lang.String" />
        <result column="recheck_flag" jdbcType="VARCHAR" property="recheckFlag"  javaType="java.lang.String" />
        <result column="inspection_order_num" jdbcType="VARCHAR" property="inspectionOrderNum"  javaType="java.lang.String" />
    </resultMap>

    <sql id="Review_Task_Base_Column_List">
        a.sample_plan_code,
        b.row_num,
        b.material_code,
        b.material_desc,
        a.inspect_department,
        (select d.institute_name from qms_inspection_institute d where d.institute_code = c.inspection_organization and d.status = '0') institute_name,
        b.review_status,
        (select u.real_name from qms_user u where u.login_name = e.reviewer) reviewer,
        e.review_result,
        b.recheck_flag,
        c.inspection_order_num
    </sql>

    <select id="findReviewTaskInfo" parameterType="com.evergrande.qms.vo.QmsReviewTaskVO" resultMap="ReviewTaskBaseResult">
        select
                <include refid="Review_Task_Base_Column_List"/>
                from qms_sample_plan a,
                    qms_sample_plan_detail b,
                    qms_inspection_order c,
                    qms_inspection_result e,
                    qms_order_material_detail_bind f
                        where a.sample_plan_code = b.sample_plan_code
                            and a.data_status = '1'
                            and b.data_status = '1'
                            and a.is_delete = '0'
                            and b.id = f.sample_plan_detail_id
                            and c.id = f.inspection_order_id
                            and c.status != '5'
                            and a.sample_plan_code = e.sample_plan_code
                            and b.material_code = e.material_code
                            and b.recheck_flag = '2'
                            <if test="reviewResult != null and reviewResult != ''">
                                and e.review_result = #{reviewResult,jdbcType=VARCHAR}
                            </if>
                            <if test="inspectDepartment != null and inspectDepartment != ''">
                                and a.inspect_department = #{inspectDepartment,jdbcType=VARCHAR}
                            </if>
                            <if test="instituteCode != null and instituteCode != ''">
                                and c.inspection_organization = #{instituteCode,jdbcType=VARCHAR}
                            </if>
                            <if test="samplePlanCode != null and samplePlanCode != ''">
                                and a.sample_plan_code  like concat('%', #{samplePlanCode,jdbcType=VARCHAR},'%')
                            </if>
                           <if test="materialCode != null and materialCode != ''">
                                and b.material_code like concat('%',#{materialCode,jdbcType=VARCHAR},'%')
                           </if>
                            <if test="materialDesc != null and materialDesc != ''">
                                and b.material_desc like concat('%',#{materialDesc,jdbcType=VARCHAR},'%')
                            </if>
                            <if test="reviewer != null and reviewer != ''">
                                and (select u.real_name from qms_user u where u.login_name = e.reviewer) like concat('%',#{reviewer,jdbcType=VARCHAR},'%')
                            </if>
                            <if test="dutyUserId != null and dutyUserId != ''">
                                and b.duty_user_id = #{dutyUserId,jdbcType=VARCHAR}
                            </if>
                            <choose>
                                <when test="reviewStatus == null or reviewStatus == ''">
                                    and b.review_status in ('1','2','3') <!--状态为：待复核、审核中、已复核-->
                                </when>
                                <otherwise>
                                    and b.review_status = #{reviewStatus,jdbcType=VARCHAR}
                                </otherwise>
                            </choose>
                            order by a.sample_plan_code desc
    </select>

    <select id="findOriginalOrderNum" resultType="java.lang.String">
        select c.inspection_order_num
                from qms_sample_plan a,
                    qms_sample_plan_detail b,
                    qms_inspection_order c,
                    qms_order_material_detail_bind d
                        where a.sample_plan_code = b.sample_plan_code
                            and a.data_status = '1'
                            and b.data_status = '1'
                            and a.is_delete = '0'
                            and b.id = d.sample_plan_detail_id
                            and c.id = d.inspection_order_id
                            and c.status in ('3','4')
                            and a.sample_plan_code = #{samplePlanCode,jdbcType=VARCHAR}
                            and b.material_code = #{materialCode,jdbcType=VARCHAR}
    </select>
</mapper>